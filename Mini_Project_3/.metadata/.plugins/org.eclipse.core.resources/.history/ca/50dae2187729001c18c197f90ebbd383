/*
 * dc_motor.c
 *
 *  Created on: Oct 10, 2021
 *      Author: LENOVO
 */

#include "dc_motor.h"
#include "common_macros.h"
#include "gpio.h"
#include "avr/io.h" /*to use registers in PWM function*/

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/


/*
 * Description :
 * The Function responsible for setup the direction for the two motor pins through the GPIO driver.
 * Stop at the DC-Motor at the beginning through the GPIO driver.
 */

void DcMotor_init(void){
	/*set PB0 and PB1 direction as output*/
	GPIO_setupPinDirection(PORTB_ID, PIN0_ID,PIN_OUTPUT);
	GPIO_setupPinDirection(PORTB_ID, PIN1_ID,PIN_OUTPUT);
	/* the motor stop at the beginning */
	GPIO_writePin(PORTB_ID, PIN0_ID,LOGIC_LOW);
	GPIO_writePin(PORTB_ID, PIN1_ID,LOGIC_LOW);
}

void PWM_Timer0_start(unsigned char set_duty_cycle)
{

	TCNT0 = 0; /*Set Timer Initial value*/

	OCR0  = set_duty_cycle*(256/100); /* Set Compare Value*/

	DDRB  = DDRB | (1<<PB3); /*set PB3/OC0 as output pin --> pin where the PWM signal is generated from MC.*/

	/* Configure timer control register
	 * 1. Fast PWM mode FOC0=0
	 * 2. Fast PWM Mode WGM01=1 & WGM00=1
	 * 3. Clear OC0 when match occurs (non inverted mode) COM00=0 & COM01=1
	 * 4. clock = F_CPU/8 CS00=0 CS01=1 CS02=0
	 */
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS01);
}

/*
 * Description :
 * The function responsible for rotate the DC Motor CW/ or A-CW or stop the motor based on the state input state value.
 * Send the required duty cycle to the PWM driver based on the required speed value.
 */

void DcMotor_Rotate(DcMotor_State state,uint8 speed){

	if(state == CW){
		/*the motor will rotate clockwise*/
		GPIO_writePin(PORTB_ID, PIN0_ID,LOGIC_LOW);
		GPIO_writePin(PORTB_ID, PIN1_ID,LOGIC_HIGH);
	}
	else if(state == A_CW ){
		/*the motor will rotate Anti-clockwise*/
		GPIO_writePin(PORTB_ID, PIN0_ID,LOGIC_HIGH);
		GPIO_writePin(PORTB_ID, PIN1_ID,LOGIC_LOW);
	}
	else if(state == STOP){
		/*the motor will stop rotating*/
		GPIO_writePin(PORTB_ID, PIN0_ID,LOGIC_LOW);
		GPIO_writePin(PORTB_ID, PIN1_ID,LOGIC_LOW);
	}

    /* send the speed to the PWM*/
	PWM_Timer0_start(speed);
}
